#pragma kernel CSMain


//The texture we'll be writing to.
RWTexture2D<float4> MapTex;
//The data we're using to write to the texture.
Texture2D<float4> RedData;
Texture2D<float4> GreenData;
Texture2D<float4> BlueData;
Texture2D<float4> LuminData;

//Our uniforms for the data. (What we can use to modify all the data uniformaly).
uniform float MaxRed;
uniform float MaxBlue;
uniform float MaxGreen;
uniform float MaxLumin;

//Just an example of how to use functions in a compute shader.
//You could have these for additive, multiply, etc...
float4 ColourCorrection(float4 PixelColour, float Power)
{
    //A very basic colour correction modifier.
    return pow(PixelColour, 0.4343);
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    //id is the current id of the array. so RedData[id.xy] is the xy pixel of the red data.
    
    //Set a colour value to start with
    float4 Colour = float4(0.0, 0.0, 0.0, 1.0);
    
    //Assign the RGB values of colour.
    Colour.x = RedData[id.xy].x * MaxRed;
    Colour.y = BlueData[id.xy].x * MaxGreen;
    Colour.z = GreenData[id.xy].x * MaxBlue;

    //Using lumin data
    Colour *= LuminData[id.xy].x;
    Colour = ColourCorrection(Colour, 0.4343); //A very basic colour correction modifier.

    //Assign the MapTexture pixel it the colour calculated.
    MapTex[id.xy] = Colour;
    //MapTex[id.xy] = float4(0.5,0.5,0.5,1.0);
}
